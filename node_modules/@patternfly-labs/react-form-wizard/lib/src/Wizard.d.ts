import { ReactElement, ReactNode } from 'react';
import { EditMode } from '.';
export interface WizardProps {
    title: string;
    description?: string;
    children: ReactNode;
    defaultData?: object;
    template?: string;
    yamlToDataTemplate?: string;
    onSubmit: WizardSubmit;
    onCancel: WizardCancel;
    hasButtons?: boolean;
    editMode?: EditMode;
}
export declare type WizardSubmit = (data: unknown) => Promise<void>;
export declare type WizardCancel = () => void;
export declare function Wizard(props: WizardProps & {
    showHeader?: boolean;
    showYaml?: boolean;
}): JSX.Element;
export declare function WizardActiveStep(props: {
    steps: ReactElement[];
    activeStep: ReactElement;
    setActiveStep: (activeStep: ReactElement) => void;
    next: () => void;
    back: () => void;
    onSubmit: WizardSubmit;
    onCancel: WizardCancel;
    template?: HandlebarsTemplateDelegate;
    hasButtons?: boolean;
    isYamlArray: boolean;
}): JSX.Element;

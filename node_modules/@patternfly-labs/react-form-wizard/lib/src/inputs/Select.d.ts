import { ReactNode } from 'react';
import { InputCommonProps } from './Input';
import './Select.css';
export interface Option<T> {
    id?: string;
    icon?: ReactNode;
    label: string;
    description?: string;
    value: T;
    disabled?: boolean;
}
export interface OptionGroup<T> {
    id?: string;
    label: string;
    options: (Option<T> | string | number)[] | undefined;
}
declare type SelectCommonProps<T> = InputCommonProps<T> & {
    placeholder?: string;
    footer?: ReactNode;
    label: string;
    keyPath?: string;
    isCreatable?: boolean;
    onCreate?: (value: string) => void;
};
interface SingleSelectProps<T> extends SelectCommonProps<T> {
    variant: 'single';
    options: (Option<T> | string | number)[] | undefined;
}
export declare function Select<T>(props: Omit<SingleSelectProps<T>, 'variant'>): JSX.Element;
export {};

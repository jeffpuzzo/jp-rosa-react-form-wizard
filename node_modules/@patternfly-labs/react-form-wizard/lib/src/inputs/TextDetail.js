import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { DescriptionListDescription, DescriptionListGroup, DescriptionListTerm, Stack } from '@patternfly/react-core';
import { Fragment } from 'react';
import { Indented } from '../components/Indented';
import { useInputHidden, useValue } from './Input';
export function TextDetail(props) {
    const [value] = useValue(props, '');
    const hidden = useInputHidden(props);
    if (hidden)
        return _jsx(Fragment, {}, void 0);
    if (!props.label) {
        if (!value && props.placeholder) {
            return _jsx("span", { style: { opacity: 0.7 }, children: props.placeholder }, void 0);
        }
        if (value === undefined) {
            return _jsx(Fragment, {}, void 0);
        }
        return _jsx(Fragment, { children: value }, void 0);
    }
    if (value === undefined) {
        return _jsx(Fragment, {}, void 0);
    }
    return (_jsxs(Stack, { children: [_jsxs(DescriptionListGroup, { children: [_jsx(DescriptionListTerm, { children: props.label }, void 0), _jsx(DescriptionListDescription, { id: props.id, children: value }, void 0)] }, void 0), props.children && _jsx(Indented, { children: props.children }, void 0)] }, void 0));
}
//# sourceMappingURL=TextDetail.js.map
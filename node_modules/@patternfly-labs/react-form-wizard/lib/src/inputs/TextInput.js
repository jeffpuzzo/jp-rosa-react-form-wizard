import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { InputGroup } from '@patternfly/react-core/dist/js/components/InputGroup';
import { TextInput as PFTextInput } from '@patternfly/react-core/dist/js/components/TextInput';
import { Fragment, useState } from 'react';
import { TextDetail } from '..';
import { ClearInputButton } from '../components/ClearInputButton';
import { PasteInputButton } from '../components/PasteInputButton';
import { ShowSecretsButton } from '../components/ShowSecretsButton';
import { DisplayMode } from '../contexts/DisplayModeContext';
import { lowercaseFirst, useInput } from './Input';
import { InputLabel } from './InputLabel';
export function TextInput(props) {
    const { displayMode: mode, value, setValue, disabled, validated, hidden, id } = useInput(props);
    const [showSecrets, setShowSecrets] = useState(false);
    if (hidden)
        return _jsx(Fragment, {}, void 0);
    if (mode === DisplayMode.Details) {
        if (!value)
            return _jsx(Fragment, {}, void 0);
        return _jsx(TextDetail, { id: id, path: props.path, label: props.label }, void 0);
    }
    const placeholder = props.placeholder ?? props.label !== undefined ? `Enter the ${lowercaseFirst(props.label ?? '')}` : '';
    return (_jsx(InputLabel, { ...props, id: id, children: _jsxs(InputGroup, { children: [_jsx(PFTextInput, { id: id, placeholder: placeholder, validated: validated, value: value, onChange: setValue, isReadOnly: props.readonly, type: !props.secret || showSecrets ? 'text' : 'password', isDisabled: disabled }, void 0), !disabled && value !== '' && props.secret && (_jsx(ShowSecretsButton, { showSecrets: showSecrets, setShowSecrets: setShowSecrets }, void 0)), !props.disablePaste && !disabled && value === '' && (_jsx(PasteInputButton, { setValue: setValue, setShowSecrets: setShowSecrets }, void 0)), !props.disablePaste && !disabled && value !== '' && !props.readonly && !props.disabled && (_jsx(ClearInputButton, { onClick: () => setValue('') }, void 0))] }, void 0) }, void 0));
}
//# sourceMappingURL=TextInput.js.map